name: Deploy Docker Monitor

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure Swarm active
        run: |
          SWARM_STATUS=$(docker info --format '{{.Swarm.LocalNodeState}}')
          echo "Current Swarm status: $SWARM_STATUS"
          if [ "$SWARM_STATUS" != "active" ]; then
            docker swarm init
                fi

      - name: Python Code Quality & Security Check
        run: |
          echo "ðŸ”¹ Checking Python packages..."
          uvx pip list
      
          echo "ðŸ”¹ Checking for broken dependencies..."
          uvx pip check || true
      
          echo "ðŸ”¹ Checking for known vulnerabilities..."
          uvx pip install safety
          uvx safety check || true
      
          echo "ðŸ”¹ Code style check (PEP8)..."
          uvx pip install flake8
          uvx flake8 backend functions pages app.py || true
      
          echo "ðŸ”¹ Type hint check..."
          uvx pip install mypy
          uvx mypy backend functions pages app.py || true
      
          echo "ðŸ”¹ Compiling Python code..."
          uvx python -m compileall backend functions pages app.py || true
      
          echo "ðŸ”¹ Security analysis with Bandit..."
          uvx pip install bandit
          uvx bandit -r backend functions pages app.py -ll || true


      - name: Build Docker image
        run: |
          docker build -t docker-monitor -f Dockerfile.local .

      - name: Deploy stack on Swarm
        run: |
          cp -Rfv .env.example .env
          docker stack deploy -c docker-compose.swarm.yml stack_monitor

      - name: Check service status
        run: docker service ls
